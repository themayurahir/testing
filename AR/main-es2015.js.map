{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/face-filter/face-filter.component.ts","./src/app/face-filter/face-filter.component.html","./src/app/gltf/gltf.component.ts","./src/app/gltf/gltf.component.html","./src/app/videojs-viewer/videojs-viewer.component.ts","./src/app/videojs-viewer/videojs-viewer.component.html","./src/assets/js/stl-loader.js","./src/environments/environment.ts","./src/main.ts","min-document (ignored)","webpack:///min-document (ignored)?64a4"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'VRtest';\n}\n","<!-- <app-videojs-viewer url='https://www.dropbox.com/s/xh2282nvb0gvmaz/the_hogwarts_common_room_ravenclaw.mp4?raw=1'></app-videojs-viewer> -->\r\n<!-- <app-face-filter></app-face-filter> -->\r\n<app-gltf></app-gltf>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { VideojsViewerComponent } from './videojs-viewer/videojs-viewer.component';\nimport { FaceFilterComponent } from './face-filter/face-filter.component';\nimport { GltfComponent } from './gltf/gltf.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    VideojsViewerComponent,\n    FaceFilterComponent,\n    GltfComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, AfterViewInit } from '@angular/core';\n\n// import * as THREE from '../../assets/js/three.min.js';\n// import 'facefilter/helpers/JeelizResizer.js';\n// import * as JeelizResizer from 'facefilter/helpers/JeelizResizer.js'\n// import {JEEFACEFILTERAPI}  from '../../assets/js/jeelizFaceFilterES6.js'\nimport 'facefilter/helpers/JeelizThreejsHelper.js';\nimport '../../assets/js/stl-loader.js';\n\n@Component({\n  selector: 'app-face-filter',\n  templateUrl: './face-filter.component.html',\n  styleUrls: ['./face-filter.component.css']\n})\nexport class FaceFilterComponent implements OnInit, AfterViewInit {\n\n  public THREECAMERA;\n\n  constructor() { }\n\n  detect_callback = (isDetected) => {\n    if (isDetected) {\n      console.log('INFO in detect_callback() : DETECTED');\n    } else {\n      console.log('INFO in detect_callback() : LOST');\n    }\n  }\n\n  init_faceFilter = (videoSettings) => {\n    console.log(\"Inside init_faceFilter\");\n    JEEFACEFILTERAPI.init({\n      canvasId: 'jeeFaceFilterCanvas',\n      NNCpath: '../../assets/js/NNC/', // path of NNC.json file\n      videoSettings: videoSettings,\n      callbackReady: (errCode, spec) => {\n        if (errCode) {\n          console.log('AN ERROR HAPPENED. SORRY BRO :( . ERR =', errCode);\n          return;\n        }\n\n        console.log('INFO : JEEFACEFILTERAPI IS READY');\n        this.init_threeScene(spec);\n      }, // end callbackReady()\n\n      // called at each render iteration (drawing loop)\n      callbackTrack: (detectState) => {\n        THREE.JeelizHelper.render(detectState, this.THREECAMERA);\n      } // end callbackTrack()\n    }); // end JEEFACEFILTERAPI.init call\n  }\n\n  init_threeScene(spec) {\n    console.log('inside init_threeScene')\n    console.log('THREE.JeelizHelper:', THREE.JeelizHelper);\n    const threeStuffs = THREE.JeelizHelper.init(spec, this.detect_callback);\n    // Create the JSONLoader for our hat:\n    const loader = new THREE.BufferGeometryLoader();\n    // const loader = new THREE.STLLoader();\n\n    // Load our cool hat:\n    loader.load(\n      'assets/js/models/luffys_hat.json',\n      (geometry, materials) => {\n        // we create our Hat mesh\n        const mat = new THREE.MeshBasicMaterial({\n          map: new THREE.TextureLoader().load(\"assets/js/models/Texture.jpg\")\n        });\n        // const mat = new THREE.MeshPhongMaterial({\n        //   color: 0x4C4C4C, ambient: 0x4C4C4C, specular: 0x030303, shading: THREE.SmoothShading\n        // });\n        const hatMesh = new THREE.Mesh(geometry, mat);\n\n        hatMesh.scale.multiplyScalar(1.2);\n        hatMesh.rotation.set(0, -40, 0);\n        hatMesh.position.set(0.0, 0.6, 0.0);\n        hatMesh.frustumCulled = false;\n        hatMesh.side = THREE.DoubleSide;\n\n        threeStuffs.faceObject.add(hatMesh);\n      }\n      // (geometry) => {\n      //   const mat = new THREE.MeshPhongMaterial({\n      //     color: 0x4C4C4C, ambient: 0x4C4C4C, specular: 0x030303, shading: THREE.SmoothShading\n      //   });\n\n      //   geometry.computeVertexNormals();\n\n      //   const hatMesh = new THREE.Mesh(geometry, mat);\n\n      //   hatMesh.rotation.x = -50 * Math.PI / 180;\n      //   hatMesh.rotation.z = 0;\n      //   hatMesh.rotation.y = 0;\n      //   hatMesh.position.x = 1000;\n      //   // hatMesh.side = THREE.DoubleSide;\n\n      //   THREE.AnimationClip.CreateFromMorphTargetSequence( 'facialExpressions', geometry.morphTargets, 3 );\n      //   threeStuffs.faceObject.add(hatMesh);\n      // }\n\n    )\n\n    // CREATE LIGHT\n    const ambientLight = new THREE.AmbientLight(0XFFFFFF, 0.8);\n    threeStuffs.scene.add(ambientLight);\n\n    // CREATE THE CAMERA\n    // old fashioned way: with a fixed FoV:\n    //const aspecRatio = spec.canvasElement.width / spec.canvasElement.height;\n    //THREECAMERA = new THREE.PerspectiveCamera(SETTINGS.cameraFOV, aspecRatio, 0.1, 100);\n\n    // New hype and lazy way, the helper guess a plausible FoV depending on the hardware:\n    this.THREECAMERA = THREE.JeelizHelper.create_camera();\n  } // end init_threeScene()\n\n  main() {\n    JeelizResizer.size_canvas({\n      canvasId: 'jeeFaceFilterCanvas',\n      callback: (isError, bestVideoSettings) => {\n        console.log('Best:', this);\n        this.init_faceFilter(bestVideoSettings);\n      }\n    })\n\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  ngAfterViewInit() {\n    this.main()\n  }\n\n\n\n\n\n\n\n}\n","<canvas width=\"600\" height=\"600\" id='jeeFaceFilterCanvas'></canvas>","import { Component, OnInit, Renderer2, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n@Component({\n  selector: 'app-gltf',\n  templateUrl: './gltf.component.html',\n  styleUrls: ['./gltf.component.css']\n})\nexport class GltfComponent implements OnInit {\n\n  constructor(private renderer2: Renderer2, @Inject(DOCUMENT) private _document) { \n    this.loadScripts();\n  }\n\n  // Method to dynamically load JavaScript \n  loadScripts() { \n  \n    // This array contains all the files/CDNs \n    const dynamicScripts = [\n      'assets/js/webgl.js',\n      'assets/js/jeelizFaceFilterES6.js',\n      'assets/js/stl/three.js',\n      // 'https://threejs.org/build/three.js',\n      'assets/js/stl/STLLoader.js',\n      'assets/js/JeelizResizer.js',\n      'assets/js/JeelizThreejsHelper.js',\n      'assets/js/demo.js',\n    ]; \n    for (let i = 0; i < dynamicScripts.length; i++) { \n      const node = document.createElement('script'); \n      node.src = dynamicScripts[i]; \n      node.type = 'text/javascript'; \n      node.async = false; \n      document.getElementsByTagName('head')[0].appendChild(node); \n    } \n }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- <div style='color: white'>\n    <canvas width=\"600\" height=\"600\" id='jeeFaceFilterCanvas'></canvas>\n</div> -->\n<div>\n    <canvas class=\"videoRotate\" id='jeeFaceFilterCanvas'></canvas>\n    <div class=\"questions\">\n        <div id=\"step-0\" class=\"step\">\n            <p class=\"intro\">Start the quiz by clicking on the button below</p>\n            <button id=\"start\">START</button>\n        </div>\n        <div id=\"step\" style=\"display: none\" class=\"step\" data-step-num=\"0\">\n            <p class=\"question\" data-question-id=\"0\"></p>\n            <button data-answer-id=\"0\" class=\"answer\"></button>\n            <span class=\"prev\">&lt;</span>\n            <span class=\"next\">&gt;</span>\n        </div>\n    </div>\n    <div class=\"house\">\n        <div class=\"zoomInUp\">\n          <h2 class=\"house-name\"></h2>\n          <img id=\"house-img\" />\n          <!-- <div style=\"text-align: center;\">\n            <a href=\"\"  id=\"fb-link\" target=\"_blank\"><img src=\"assets/img/fb.png\" class=\"social\"></a>\n            <a href=\"\" id=\"tw-link\" target=\"_blank\"><img src=\"assets/img/twitter.png\" class=\"social\" style=\"background: #fff;\"></a>\n          </div> -->\n        </div>\n      </div>\n    <!-- <div class=\"demo-frame\" style=\"margin: 0\">\n        <div class=\"demo-container\" id=\"demo-container\"\n            style=\"overflow:hidden; position: relative; max-width: 100%; max-height: 100%;\">\n            <!-- <video id=\"video\" preload autoplay loop muted></video>\n            <div id=\"canvas\"></div>\n            <canvas id=\"canvas-track\"></canvas> -->\n            \n            \n        <!-- </div>\n    </div> -->\n</div>\n","import { Component, OnInit, AfterViewInit, ElementRef, ViewChild, Input } from '@angular/core';\n\nimport videojs from 'video.js';\nimport 'videojs-vr/dist/videojs-vr.js';\n\n@Component({\n  selector: 'app-videojs-viewer',\n  templateUrl: './videojs-viewer.component.html',\n  styleUrls: ['./videojs-viewer.component.css']\n})\nexport class VideojsViewerComponent implements OnInit, AfterViewInit {\n\n  @Input() public url: string;\n  private readonly config: any;\n  private player: any;\n  @ViewChild('my_video')\n  private element: ElementRef;\n\n  constructor() {\n    // video.js configuration\n    this.config = {\n      controls: false,\n      autoplay: true,\n      fluid: false,\n      loop: false,\n      width: 640,\n      height: 440\n    };\n  }\n\n  ngOnInit() {\n    console.log('URL:', this.url)\n  }\n\n  // using ngAfterViewInit so that videojs element\n  // after the component template itself has been rendered\n  ngAfterViewInit() {\n\n    // setup the player\n    this.player = videojs(this.element.nativeElement, this.config, () => {\n      console.log('Using video.js ' + videojs.VERSION);\n      this.player.src(this.url);\n      this.player.vr({projection: 'EAC'});\n    });\n\n    // error handling\n    this.player.on('error', (error) => {\n      console.warn(error);\n    });\n  }\n\n}\n","<div class=\"video-view\">\n    <video #my_video class=\"video-js vjs-default-skin\" controls preload=\"auto\" crossorigin=\"use-credentials\">\n    </video>\n</div>","/**\r\n * @author aleeper / http://adamleeper.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author gero3 / https://github.com/gero3\r\n * @author Mugen87 / https://github.com/Mugen87\r\n *\r\n * Description: A THREE loader for STL ASCII files, as created by Solidworks and other CAD programs.\r\n *\r\n * Supports both binary and ASCII encoded files, with automatic detection of type.\r\n *\r\n * The loader returns a non-indexed buffer geometry.\r\n *\r\n * Limitations:\r\n *  Binary decoding supports \"Magics\" color format (http://en.wikipedia.org/wiki/STL_(file_format)#Color_in_binary_STL).\r\n *  There is perhaps some question as to how valid it is to always assume little-endian-ness.\r\n *  ASCII decoding assumes file is UTF-8.\r\n *\r\n * Usage:\r\n *  var loader = new THREE.STLLoader();\r\n *  loader.load( './models/stl/slotted_disk.stl', function ( geometry ) {\r\n *    scene.add( new THREE.Mesh( geometry ) );\r\n *  });\r\n *\r\n * For binary STLs geometry might contain colors for vertices. To use it:\r\n *  // use the same code to load STL as above\r\n *  if (geometry.hasColors) {\r\n *    material = new THREE.MeshPhongMaterial({ opacity: geometry.alpha, vertexColors: THREE.VertexColors });\r\n *  } else { .... }\r\n *  var mesh = new THREE.Mesh( geometry, material );\r\n */\r\n\r\n\r\nTHREE.STLLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.STLLoader.prototype = {\r\n\r\n\tconstructor: THREE.STLLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.FileLoader( scope.manager );\r\n\t\tloader.setResponseType( 'arraybuffer' );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\ttry {\r\n\r\n\t\t\t\tonLoad( scope.parse( text ) );\r\n\r\n\t\t\t} catch ( exception ) {\r\n\r\n\t\t\t\tif ( onError ) {\r\n\r\n\t\t\t\t\tonError( exception );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tparse: function ( data ) {\r\n\r\n\t\tfunction isBinary( data ) {\r\n\r\n\t\t\tvar expect, face_size, n_faces, reader;\r\n\t\t\treader = new DataView( data );\r\n\t\t\tface_size = ( 32 / 8 * 3 ) + ( ( 32 / 8 * 3 ) * 3 ) + ( 16 / 8 );\r\n\t\t\tn_faces = reader.getUint32( 80, true );\r\n\t\t\texpect = 80 + ( 32 / 8 ) + ( n_faces * face_size );\r\n\r\n\t\t\tif ( expect === reader.byteLength ) {\r\n\r\n\t\t\t\treturn true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// An ASCII STL data must begin with 'solid ' as the first six bytes.\r\n\t\t\t// However, ASCII STLs lacking the SPACE after the 'd' are known to be\r\n\t\t\t// plentiful.  So, check the first 5 bytes for 'solid'.\r\n\r\n\t\t\t// US-ASCII ordinal values for 's', 'o', 'l', 'i', 'd'\r\n\r\n\t\t\tvar solid = [ 115, 111, 108, 105, 100 ];\r\n\r\n\t\t\tfor ( var i = 0; i < 5; i ++ ) {\r\n\r\n\t\t\t\t// If solid[ i ] does not match the i-th byte, then it is not an\r\n\t\t\t\t// ASCII STL; hence, it is binary and return true.\r\n\r\n\t\t\t\tif ( solid[ i ] != reader.getUint8( i, false ) ) return true;\r\n\r\n \t\t\t}\r\n\r\n\t\t\t// First 5 bytes read \"solid\"; declare it to be an ASCII STL\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseBinary( data ) {\r\n\r\n\t\t\tvar reader = new DataView( data );\r\n\t\t\tvar faces = reader.getUint32( 80, true );\r\n\r\n\t\t\tvar r, g, b, hasColors = false, colors;\r\n\t\t\tvar defaultR, defaultG, defaultB, alpha;\r\n\r\n\t\t\t// process STL header\r\n\t\t\t// check for default color in header (\"COLOR=rgba\" sequence).\r\n\r\n\t\t\tfor ( var index = 0; index < 80 - 10; index ++ ) {\r\n\r\n\t\t\t\tif ( ( reader.getUint32( index, false ) == 0x434F4C4F /*COLO*/ ) &&\r\n\t\t\t\t\t( reader.getUint8( index + 4 ) == 0x52 /*'R'*/ ) &&\r\n\t\t\t\t\t( reader.getUint8( index + 5 ) == 0x3D /*'='*/ ) ) {\r\n\r\n\t\t\t\t\thasColors = true;\r\n\t\t\t\t\tcolors = [];\r\n\r\n\t\t\t\t\tdefaultR = reader.getUint8( index + 6 ) / 255;\r\n\t\t\t\t\tdefaultG = reader.getUint8( index + 7 ) / 255;\r\n\t\t\t\t\tdefaultB = reader.getUint8( index + 8 ) / 255;\r\n\t\t\t\t\talpha = reader.getUint8( index + 9 ) / 255;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar dataOffset = 84;\r\n\t\t\tvar faceLength = 12 * 4 + 2;\r\n\r\n\t\t\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\t\t\tvar vertices = [];\r\n\t\t\tvar normals = [];\r\n\r\n\t\t\tfor ( var face = 0; face < faces; face ++ ) {\r\n\r\n\t\t\t\tvar start = dataOffset + face * faceLength;\r\n\t\t\t\tvar normalX = reader.getFloat32( start, true );\r\n\t\t\t\tvar normalY = reader.getFloat32( start + 4, true );\r\n\t\t\t\tvar normalZ = reader.getFloat32( start + 8, true );\r\n\r\n\t\t\t\tif ( hasColors ) {\r\n\r\n\t\t\t\t\tvar packedColor = reader.getUint16( start + 48, true );\r\n\r\n\t\t\t\t\tif ( ( packedColor & 0x8000 ) === 0 ) {\r\n\r\n\t\t\t\t\t\t// facet has its own unique color\r\n\r\n\t\t\t\t\t\tr = ( packedColor & 0x1F ) / 31;\r\n\t\t\t\t\t\tg = ( ( packedColor >> 5 ) & 0x1F ) / 31;\r\n\t\t\t\t\t\tb = ( ( packedColor >> 10 ) & 0x1F ) / 31;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tr = defaultR;\r\n\t\t\t\t\t\tg = defaultG;\r\n\t\t\t\t\t\tb = defaultB;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( var i = 1; i <= 3; i ++ ) {\r\n\r\n\t\t\t\t\tvar vertexstart = start + i * 12;\r\n\r\n\t\t\t\t\tvertices.push( reader.getFloat32( vertexstart, true ) );\r\n\t\t\t\t\tvertices.push( reader.getFloat32( vertexstart + 4, true ) );\r\n\t\t\t\t\tvertices.push( reader.getFloat32( vertexstart + 8, true ) );\r\n\r\n\t\t\t\t\tnormals.push( normalX, normalY, normalZ );\r\n\r\n\t\t\t\t\tif ( hasColors ) {\r\n\r\n\t\t\t\t\t\tcolors.push( r, g, b );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( new Float32Array( vertices ), 3 ) );\r\n\t\t\tgeometry.addAttribute( 'normal', new THREE.BufferAttribute( new Float32Array( normals ), 3 ) );\r\n\r\n\t\t\tif ( hasColors ) {\r\n\r\n\t\t\t\tgeometry.addAttribute( 'color', new THREE.BufferAttribute( new Float32Array( colors ), 3 ) );\r\n\t\t\t\tgeometry.hasColors = true;\r\n\t\t\t\tgeometry.alpha = alpha;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn geometry;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseASCII( data ) {\r\n\r\n\t\t\tvar geometry = new THREE.BufferGeometry();\r\n\t\t\tvar patternFace = /facet([\\s\\S]*?)endfacet/g;\r\n\t\t\tvar faceCounter = 0;\r\n\r\n\t\t\tvar patternFloat = /[\\s]+([+-]?(?:\\d+.\\d+|\\d+.|\\d+|.\\d+)(?:[eE][+-]?\\d+)?)/.source;\r\n\t\t\tvar patternVertex = new RegExp( 'vertex' + patternFloat + patternFloat + patternFloat, 'g' );\r\n\t\t\tvar patternNormal = new RegExp( 'normal' + patternFloat + patternFloat + patternFloat, 'g' );\r\n\r\n\t\t\tvar vertices = [];\r\n\t\t\tvar normals = [];\r\n\r\n\t\t\tvar normal = new THREE.Vector3();\r\n\r\n\t\t\tvar result;\r\n\r\n\t\t\twhile ( ( result = patternFace.exec( data ) ) !== null ) {\r\n\r\n\t\t\t\tvar vertexCountPerFace = 0;\r\n\t\t\t\tvar normalCountPerFace = 0;\r\n\r\n\t\t\t\tvar text = result[ 0 ];\r\n\r\n\t\t\t\twhile ( ( result = patternNormal.exec( text ) ) !== null ) {\r\n\r\n\t\t\t\t\tnormal.x = parseFloat( result[ 1 ] );\r\n\t\t\t\t\tnormal.y = parseFloat( result[ 2 ] );\r\n\t\t\t\t\tnormal.z = parseFloat( result[ 3 ] );\r\n\t\t\t\t\tnormalCountPerFace ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile ( ( result = patternVertex.exec( text ) ) !== null ) {\r\n\r\n\t\t\t\t\tvertices.push( parseFloat( result[ 1 ] ), parseFloat( result[ 2 ] ), parseFloat( result[ 3 ] ) );\r\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\t\t\t\t\tvertexCountPerFace ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// every face have to own ONE valid normal\r\n\r\n\t\t\t\tif ( normalCountPerFace !== 1 ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.STLLoader: Something isn\\'t right with the normal of face number ' + faceCounter );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// each face have to own THREE valid vertices\r\n\r\n\t\t\t\tif ( vertexCountPerFace !== 3 ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.STLLoader: Something isn\\'t right with the vertices of face number ' + faceCounter );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfaceCounter ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.addAttribute( 'position', new THREE.Float32BufferAttribute( vertices, 3 ) );\r\n\t\t\tgeometry.addAttribute( 'normal', new THREE.Float32BufferAttribute( normals, 3 ) );\r\n\r\n\t\t\treturn geometry;\r\n\r\n\t\t}\r\n\r\n\t\tfunction ensureString( buffer ) {\r\n\r\n\t\t\tif ( typeof buffer !== 'string' ) {\r\n\r\n\t\t\t\treturn THREE.LoaderUtils.decodeText( new Uint8Array( buffer ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn buffer;\r\n\r\n\t\t}\r\n\r\n\t\tfunction ensureBinary( buffer ) {\r\n\r\n\t\t\tif ( typeof buffer === 'string' ) {\r\n\r\n\t\t\t\tvar array_buffer = new Uint8Array( buffer.length );\r\n\t\t\t\tfor ( var i = 0; i < buffer.length; i ++ ) {\r\n\r\n\t\t\t\t\tarray_buffer[ i ] = buffer.charCodeAt( i ) & 0xff; // implicitly assumes little-endian\r\n\r\n\t\t\t\t}\r\n\t\t\t\treturn array_buffer.buffer || array_buffer;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn buffer;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// start\r\n\r\n\t\tvar binData = ensureBinary( data );\r\n\r\n\t\treturn isBinary( binData ) ? parseBinary( binData ) : parseASCII( ensureString( data ) );\r\n\r\n\t}\r\n\r\n};","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */","/* (ignored) */"],"sourceRoot":"webpack:///"}