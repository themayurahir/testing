{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/webgl/webgl.component.ts","webpack:///src/app/webgl/webgl.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","WebglComponent","renderer2","_document","loadScripts","dynamicScripts","i","length","node","document","createElement","src","type","async","getElementsByTagName","appendChild","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'gitpages';\n}\n","<app-webgl></app-webgl>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { WebglComponent } from './webgl/webgl.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WebglComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Renderer2, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n@Component({\n  selector: 'app-webgl',\n  templateUrl: './webgl.component.html',\n  styleUrls: ['./webgl.component.css']\n})\nexport class WebglComponent implements OnInit {\n\n  constructor(private renderer2: Renderer2, @Inject(DOCUMENT) private _document) { \n    this.loadScripts();\n  }\n\n  // Method to dynamically load JavaScript \n  loadScripts() { \n  \n    // This array contains all the files/CDNs \n    const dynamicScripts = [\n      'assets/js/tracking/build/tracking-min.js',\n      'assets/js/tracking/build/data/face-min.js',\n      'assets/js/dat.gui/build/dat.gui.min.js',\n      // '../../assets/three.min.js',\n      'https://threejs.org/build/three.js',\n      'assets/TrackballControls.js',\n      // '../../assets/Tween.min.js',\n      'https://cdnjs.cloudflare.com/ajax/libs/tween.js/16.3.5/Tween.min.js',\n      'assets/js/stl-loader.js',\n      'assets/js/loader.js?v=201805160016',\n      'assets/js/stl.js',\n      'assets/demo.js'\n    ]; \n    for (let i = 0; i < dynamicScripts.length; i++) { \n      const node = document.createElement('script'); \n      node.src = dynamicScripts[i]; \n      node.type = 'text/javascript'; \n      node.async = false; \n      document.getElementsByTagName('head')[0].appendChild(node); \n    } \n } \n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"spinner\" class=\"spinner\" style=\"display: block\">\n  <div class=\"cube1\"></div>\n  <div class=\"cube2\"></div>\n</div>\n<div class=\"demo-frame\">\n  <div class=\"demo-container\" id=\"demo-container\"\n    style=\"overflow:hidden; position: relative; max-width: 100%; max-height: 100%;\">\n    <video id=\"video\" preload autoplay loop muted></video>\n    <div id=\"canvas\"></div>\n    <canvas id=\"canvas-track\"></canvas>\n    <div class=\"questions\">\n      <div id=\"step-0\" class=\"step\">\n        <p class=\"intro\">Start the quiz by clicking on the button below</p>\n        <button id=\"start\">START</button>\n      </div>\n      <div id=\"step\" style=\"display: none\" class=\"step\" data-step-num=\"0\">\n        <p class=\"question\" data-question-id=\"0\"></p>\n        <button data-answer-id=\"0\" class=\"answer\"></button>\n        <span class=\"prev\">&lt;</span>\n        <span class=\"next\">&gt;</span>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"house\">\n  <div class=\"zoomInUp\">\n    <h2 class=\"house-name\"></h2>\n    <img id=\"house-img\" />\n    <div style=\"text-align: center;\">\n      <a href=\"\" id=\"fb-link\" target=\"_blank\"><img src=\"./assets/img/fb.png\" class=\"social\"></a>\n      <a href=\"\" id=\"tw-link\" target=\"_blank\"><img src=\"./assets/img/twitter.png\" class=\"social\"\n          style=\"background: #fff;\"></a>\n    </div>\n  </div>\n</div>\n\n<!-- <link href=\"https://fonts.googleapis.com/css?family=Lato\" rel=\"stylesheet\">\n<script src=\"https://threejs.org/build/three.js\"></script>\n<script src=\"https://rawgit.com/mrdoob/three.js/master/examples/js/controls/TrackballControls.js\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/tween.js/16.3.5/Tween.min.js\"></script>\n<script src=\"./assets/js/stl-loader.js\"></script>\n<script src=\"./assets/js/loader.js?v=201805160016\"></script>\n<script src=\"./assets/js/stl.js\"></script> -->\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}